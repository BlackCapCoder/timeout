
==================== FINAL INTERFACE ====================
2017-08-21 14:04:51.976761619 UTC

interface timeout-0.1.0.0-BkuZiRQH5eaKYe8H9wCtCk:Timeout 8002
  interface hash: 87632efbee79abcf7117ff1cefb9ecee
  ABI hash: 21c86ed0e3b5bc1f09eca2b313d2ae70
  export-list hash: f8302d778a6cafaac223f8df9c35947c
  orphan hash: 82b62e2fc16e431b2978c81c5577b982
  flag hash: 05c6dca22f9dd1832b6d5a0e6ea172a8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Timeout.findOccurance
  Timeout.initState
  Timeout.initialState
  Timeout.interp
  Timeout.run
  Timeout.runExpr
  Timeout.runStatement
  Timeout.testProg
  Timeout.untangle
  Timeout.Expr{Timeout.Add Timeout.Div Timeout.Eq Timeout.Geq Timeout.Gt Timeout.Leq Timeout.Lt Timeout.Mod Timeout.Mul Timeout.Neg Timeout.Neq Timeout.Num Timeout.Pow Timeout.Sub Timeout.Var}
  Timeout.LineNum
  Timeout.Name
  Timeout.PState{Timeout.Birth Timeout.PState code labels past pos vars}
  Timeout.Program
  Timeout.Statement{Timeout.Goto Timeout.Halt Timeout.If Timeout.In Timeout.Label Timeout.NOP Timeout.Out Timeout.Send Timeout.Seq Timeout.Set}
  Timeout.Value
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:Debug.Trace a9edf3aec504f4423d8ba829ab373a25
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Lazy 371607e50dde46b5f4103b3ab334a497
99427b83102575e72204498a57ddedd5
  $fEqExpr :: GHC.Classes.Eq Timeout.Expr
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Timeout.Expr Timeout.$fEqExpr_$c== Timeout.$fEqExpr_$c/= -}
99427b83102575e72204498a57ddedd5
  $fEqExpr_$c/= :: Timeout.Expr -> Timeout.Expr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Timeout.Expr) (b :: Timeout.Expr) ->
                 case Timeout.$fEqExpr_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
99427b83102575e72204498a57ddedd5
  $fEqExpr_$c== :: Timeout.Expr -> Timeout.Expr -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
9468cbc1be6866fc13eae8de692f278c
  $fEqStatement :: GHC.Classes.Eq Timeout.Statement
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Timeout.Statement
                  Timeout.$fEqStatement_$c==
                  Timeout.$fEqStatement_$c/= -}
9468cbc1be6866fc13eae8de692f278c
  $fEqStatement_$c/= ::
    Timeout.Statement -> Timeout.Statement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Timeout.Statement) (b :: Timeout.Statement) ->
                 case Timeout.$fEqStatement_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9468cbc1be6866fc13eae8de692f278c
  $fEqStatement_$c== ::
    Timeout.Statement -> Timeout.Statement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
99427b83102575e72204498a57ddedd5
  $fShowExpr :: GHC.Show.Show Timeout.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Timeout.Expr
                  Timeout.$fShowExpr_$cshowsPrec
                  Timeout.$fShowExpr_$cshow
                  Timeout.$fShowExpr_$cshowList -}
99427b83102575e72204498a57ddedd5
  $fShowExpr1 :: Timeout.Expr -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Timeout.Expr) (w1 :: GHC.Base.String) ->
                 Timeout.$w$cshowsPrec 0# w w1) -}
99427b83102575e72204498a57ddedd5
  $fShowExpr_$cshow :: Timeout.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Timeout.Expr) ->
                 Timeout.$fShowExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
99427b83102575e72204498a57ddedd5
  $fShowExpr_$cshowList :: [Timeout.Expr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Timeout.Expr
                   Timeout.$fShowExpr1) -}
99427b83102575e72204498a57ddedd5
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Timeout.Expr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Timeout.Expr)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Timeout.$w$cshowsPrec ww1 w1 w2 }) -}
5352983f37f17fa66229bd0a7960c86a
  $fShowPState :: GHC.Show.Show Timeout.PState
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Timeout.PState
                  Timeout.$fShowPState_$cshowsPrec
                  Timeout.$fShowPState_$cshow
                  Timeout.$fShowPState_$cshowList -}
5352983f37f17fa66229bd0a7960c86a
  $fShowPState1 :: Timeout.PState -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Timeout.$fShowPState_$cshowsPrec
                   Timeout.$fShowPState2) -}
b5dcd344ed098dc48fae2a4ff1a32423
  $fShowPState2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
5352983f37f17fa66229bd0a7960c86a
  $fShowPState_$cshow :: Timeout.PState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Timeout.PState) ->
                 Timeout.$fShowPState_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5352983f37f17fa66229bd0a7960c86a
  $fShowPState_$cshowList :: [Timeout.PState] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Timeout.PState
                   Timeout.$fShowPState1) -}
5352983f37f17fa66229bd0a7960c86a
  $fShowPState_$cshowsPrec ::
    GHC.Types.Int -> Timeout.PState -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
9468cbc1be6866fc13eae8de692f278c
  $fShowStatement :: GHC.Show.Show Timeout.Statement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Timeout.Statement
                  Timeout.$fShowStatement_$cshowsPrec
                  Timeout.$fShowStatement_$cshow
                  Timeout.$fShowStatement_$cshowList -}
9468cbc1be6866fc13eae8de692f278c
  $fShowStatement1 :: Timeout.Statement -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Timeout.$fShowStatement_$cshowsPrec
                   Timeout.$fShowPState2) -}
9468cbc1be6866fc13eae8de692f278c
  $fShowStatement_$cshow :: Timeout.Statement -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Timeout.Statement) ->
                 Timeout.$fShowStatement_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9468cbc1be6866fc13eae8de692f278c
  $fShowStatement_$cshowList :: [Timeout.Statement] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Timeout.Statement
                   Timeout.$fShowStatement1) -}
9468cbc1be6866fc13eae8de692f278c
  $fShowStatement_$cshowsPrec ::
    GHC.Types.Int -> Timeout.Statement -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
216205823341524b3912aed192f08bcf
  $sfromList ::
    [(Timeout.LineNum, a)] -> Data.Map.Base.Map Timeout.LineNum a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Timeout.LineNum, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Timeout.LineNum @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Base.Bin
                             @ Timeout.LineNum
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ Timeout.LineNum @ a)
                             (Data.Map.Base.Tip @ Timeout.LineNum @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> Timeout.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Timeout.LineNum
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ Timeout.LineNum @ a)
                                     (Data.Map.Base.Tip @ Timeout.LineNum @ a))
                                  wild2
                             GHC.Types.True
                             -> Timeout.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Timeout.LineNum
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ Timeout.LineNum @ a)
                                     (Data.Map.Base.Tip @ Timeout.LineNum @ a))
                                  wild2 } } } } } } }) -}
6c4e681222b829a3a04bfb31bb0120b5
  $sfromList1 ::
    Data.Map.Base.Map Timeout.LineNum a1
    -> [(Timeout.LineNum, a1)] -> Data.Map.Base.Map Timeout.LineNum a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
381cb331db5cc26d8c7165bf4bfb3012
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
57f6c9305f09bb5fb05e7fd22fd925bd
  $slookup3 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
7c5120bc0bc5897eca031fb815b902fc
  $swhen1 :: Timeout.PState -> ((), Timeout.PState)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Timeout.PState) -> (GHC.Tuple.(), eta1)) -}
1356f3492c8077facf7dd6cfd4e8a6de
  $tc'Add :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15988700345801610362##
                   9199440478448375961##
                   Timeout.$trModule
                   Timeout.$tc'Add1) -}
bed63bf4e1b3cb803f1a5efe9e1fab59
  $tc'Add1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Add"#) -}
b3fddada762d1e6a4d38e67baded7fe8
  $tc'Birth :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18035396431785769183##
                   16664567651570315120##
                   Timeout.$trModule
                   Timeout.$tc'Birth1) -}
2f8caa1d88880c1b6ac15c62f250cf70
  $tc'Birth1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Birth"#) -}
0acdb224e809e004058602e0dc6b3abd
  $tc'Div :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12147486733917953321##
                   14572349340685574520##
                   Timeout.$trModule
                   Timeout.$tc'Div1) -}
876884962ef77b2d452044027025b046
  $tc'Div1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Div"#) -}
9702c2f33c50d35627fd615f490f3d5d
  $tc'Eq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18017614196479600046##
                   1828496715367620673##
                   Timeout.$trModule
                   Timeout.$tc'Eq1) -}
a51c94d99644e3f359455271c4b7558a
  $tc'Eq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Eq"#) -}
548eb95dad313d6e0d4894a793c131c1
  $tc'Geq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3797892816300493789##
                   11075714270192172755##
                   Timeout.$trModule
                   Timeout.$tc'Geq1) -}
c30b626d13946a5e1fef209404b2098d
  $tc'Geq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Geq"#) -}
16b0beb4564f5c85fdd69d32c503eb41
  $tc'Goto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12068782900012729279##
                   11987739380204072839##
                   Timeout.$trModule
                   Timeout.$tc'Goto1) -}
04b0643eff834b4f4dd5ccb75e8e48a0
  $tc'Goto1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Goto"#) -}
12b04d27113894013f0998be6792ca3a
  $tc'Gt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11252599915295497630##
                   841312635567851225##
                   Timeout.$trModule
                   Timeout.$tc'Gt1) -}
2663423770d6f83ac0c65b13dbec7799
  $tc'Gt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Gt"#) -}
3e144ee8676203a4d53a414532f47143
  $tc'Halt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7990094290601920142##
                   6973001259513564237##
                   Timeout.$trModule
                   Timeout.$tc'Halt1) -}
63d1bc123f0126c3b3e9b73ba2bc0f22
  $tc'Halt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Halt"#) -}
7c6f2efe94282190a048ace2ae035f20
  $tc'If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9138510842907715187##
                   8852812206628227412##
                   Timeout.$trModule
                   Timeout.$tc'If1) -}
baef99ab70f768dddfa85f1dfe6d708a
  $tc'If1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'If"#) -}
381db39265c370ecd42c64329302bf69
  $tc'In :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5565238022248212000##
                   8596613622573586457##
                   Timeout.$trModule
                   Timeout.$tc'In1) -}
ba5c95386dce7e9ece8100ae96458790
  $tc'In1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'In"#) -}
61d4b97feb4c9d78368448fc29dec8d7
  $tc'Label :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7626168540908057633##
                   12443923357701512490##
                   Timeout.$trModule
                   Timeout.$tc'Label1) -}
c816ce1fc9b9b4e76e78ccda6a119821
  $tc'Label1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Label"#) -}
dae16b72488cddd3d9a0d39989375f05
  $tc'Leq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4922378047302425604##
                   13361632672444809500##
                   Timeout.$trModule
                   Timeout.$tc'Leq1) -}
b01517876baae47dd34adf0c5774b449
  $tc'Leq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Leq"#) -}
f47157abcc1343dc24fc6e6f77bd91e7
  $tc'Lt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1972819616994767378##
                   11713831429387351774##
                   Timeout.$trModule
                   Timeout.$tc'Lt1) -}
2c3f28707c42d6be72f481618a72b3c4
  $tc'Lt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Lt"#) -}
8d045c52c4f389fc781039e62fa376ac
  $tc'Mod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14716531623574407281##
                   7242475676406145944##
                   Timeout.$trModule
                   Timeout.$tc'Mod1) -}
bbab41354fd5023a59e512b67cf1e2bc
  $tc'Mod1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mod"#) -}
fc45ebdcd76d25887a6245bfc37e602c
  $tc'Mul :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4717971534766176184##
                   12898819956111426664##
                   Timeout.$trModule
                   Timeout.$tc'Mul1) -}
c5ddf9424dee3880dc4a7d20bdee3c65
  $tc'Mul1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mul"#) -}
b2c9ac250b9c4f48814cc4172946332d
  $tc'NOP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6302985842386370817##
                   6322701246012213397##
                   Timeout.$trModule
                   Timeout.$tc'NOP1) -}
bf653b66f6934a82510b8d20097e3df3
  $tc'NOP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NOP"#) -}
8927031ffff2755b6e67ea8bbbf7ac93
  $tc'Neg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5970570943597769116##
                   8213580278015110624##
                   Timeout.$trModule
                   Timeout.$tc'Neg1) -}
65a0810f82aa1fa599e5926ad4d6c7ab
  $tc'Neg1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Neg"#) -}
ba4bf1bd11b071a109be92b87ba358ce
  $tc'Neq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6048464449280568286##
                   10850667390254786980##
                   Timeout.$trModule
                   Timeout.$tc'Neq1) -}
33fb8dbb1ac41abf2038f46de0fe53ee
  $tc'Neq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Neq"#) -}
f50fabd0c89aeef462927d2be0fa9702
  $tc'Num :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16699188518817388937##
                   7874981571116715179##
                   Timeout.$trModule
                   Timeout.$tc'Num1) -}
0842d07a7480666c23122449ef8a21a2
  $tc'Num1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Num"#) -}
820d8e6d33f67c7c8d9368b920ca42d4
  $tc'Out :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1909257852149773668##
                   7163099309273977083##
                   Timeout.$trModule
                   Timeout.$tc'Out1) -}
1def0116e54b0bc6b93f796c9ddcf524
  $tc'Out1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Out"#) -}
e07f9e79e7f141ba07011f1a5188ef8d
  $tc'PState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9345787547986384686##
                   2260921623679714379##
                   Timeout.$trModule
                   Timeout.$tc'PState1) -}
de17711ce3c23d2127605478a971d9c7
  $tc'PState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PState"#) -}
3492440b3241cbec7d1ebc0be0451a24
  $tc'Pow :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   287834437201459185##
                   7383671894709126057##
                   Timeout.$trModule
                   Timeout.$tc'Pow1) -}
66593307e127283895345aec0bfed2c8
  $tc'Pow1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pow"#) -}
5d24c0ea475e8d4a21b9b0590608ddc5
  $tc'Send :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5568395218228189127##
                   12069479554144931888##
                   Timeout.$trModule
                   Timeout.$tc'Send1) -}
d3c0c291b2747604990a00c9668e0afb
  $tc'Send1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Send"#) -}
dc7844b5b663e94665af6c4e767bdde1
  $tc'Seq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13866955316662926682##
                   5633067738187639322##
                   Timeout.$trModule
                   Timeout.$tc'Seq1) -}
e6906264c5eceadda3aa49ded5a53dcf
  $tc'Seq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seq"#) -}
48126ade1dc269ab01fb045124a51e71
  $tc'Set :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7200578617392301890##
                   2062710630047318307##
                   Timeout.$trModule
                   Timeout.$tc'Set1) -}
b3fbb41569fee48d46308f3aa660a7ed
  $tc'Set1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Set"#) -}
38ec12886e708be0d04eb8ad100f9201
  $tc'Sub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5805718431607785974##
                   17667526271823957383##
                   Timeout.$trModule
                   Timeout.$tc'Sub1) -}
a433cf17a67abfbb403281214f2aea6f
  $tc'Sub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Sub"#) -}
cd87259ef9eca6b081ae0c7548e55e47
  $tc'Var :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3854527569054721559##
                   12081986100060036976##
                   Timeout.$trModule
                   Timeout.$tc'Var1) -}
802780306c67c45f9d2691697859e7cd
  $tc'Var1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Var"#) -}
fdc5333d693c23221c1028ba91bc70f6
  $tcExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2485804137362542904##
                   9120979917933078598##
                   Timeout.$trModule
                   Timeout.$tcExpr1) -}
3095e8e31eec29a0248b31078457b7a6
  $tcExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Expr"#) -}
33dbedf4ac8d13661e80cd79e6144bdd
  $tcPState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   988186995415600647##
                   7888606181277565550##
                   Timeout.$trModule
                   Timeout.$tcPState1) -}
53589f18b79cd63d4b24ff34caa157c4
  $tcPState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PState"#) -}
009d370652db788a74573ce8e14ebd40
  $tcStatement :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3952418737596441564##
                   13505672871719513915##
                   Timeout.$trModule
                   Timeout.$tcStatement1) -}
264ae33002a7265bdd8a3cbdb6393c65
  $tcStatement1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Statement"#) -}
f5e1f8d13eed164d46ac74e19f101b0e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Timeout.$trModule2
                   Timeout.$trModule1) -}
adba74b6542c10638552677b5afa9f1b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Timeout"#) -}
b5e7a18f4786b99a17c5f21568477255
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "timeout-0.1.0.0-BkuZiRQH5eaKYe8H9wCtCk"#) -}
99427b83102575e72204498a57ddedd5
  $w$cshowsPrec ::
    GHC.Prim.Int# -> Timeout.Expr -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
24c2620184d7d2fb0026da8bea1f6ada
  $w$sgo10 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Timeout.LineNum a1
    -> Data.Map.Base.Map Timeout.LineNum a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
9ea49f44c5cbb2c7c1c5f1ead3b8448b
  $wfindOccurance ::
    Timeout.Statement
    -> Timeout.Expr
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Timeout.PState
    -> (# (GHC.Types.Int, GHC.Types.Int, Timeout.PState),
          Timeout.PState #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U)><L,U(U)><S,1*U>,
     Inline: [0] -}
aa46a93576eb6593e46ee0e02623cd8c
  $winterp :: Timeout.PState -> (# (), Timeout.PState #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
3c7094768e64d8d71db768873ec525fa
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Timeout.LineNum a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
b297561ff337aa339470658dbceac8e5
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Timeout.LineNum a
    -> [(Timeout.LineNum, a)]
    -> Data.Map.Base.Map Timeout.LineNum a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
cc2d243fcb17d3f4b577a053c7faeb29
  $wrunExpr ::
    Timeout.Expr
    -> Timeout.PState -> (# GHC.Types.Int, Timeout.PState #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
99427b83102575e72204498a57ddedd5
  data Expr
    = Add Timeout.Expr Timeout.Expr
    | Sub Timeout.Expr Timeout.Expr
    | Mul Timeout.Expr Timeout.Expr
    | Div Timeout.Expr Timeout.Expr
    | Pow Timeout.Expr Timeout.Expr
    | Mod Timeout.Expr Timeout.Expr
    | Eq Timeout.Expr Timeout.Expr
    | Neq Timeout.Expr Timeout.Expr
    | Gt Timeout.Expr Timeout.Expr
    | Lt Timeout.Expr Timeout.Expr
    | Geq Timeout.Expr Timeout.Expr
    | Leq Timeout.Expr Timeout.Expr
    | Neg Timeout.Expr
    | Num GHC.Types.Int
    | Var GHC.Base.String
e2cf8b6ac9241aea4285b65f62c91b33
  type LineNum = GHC.Types.Int
51a242ba85b644fa1971438e2ceb3031
  type Name = GHC.Base.String
5352983f37f17fa66229bd0a7960c86a
  data PState
    = Birth
    | PState {vars :: Data.Map.Base.Map Timeout.Name Timeout.Value,
              labels :: Data.Map.Base.Map Timeout.Name Timeout.LineNum,
              pos :: Timeout.LineNum,
              code :: Timeout.Program,
              past :: Timeout.PState}
b2cb397fe8e2ea56184791b7567bfe4a
  type Program = Data.Map.Base.Map Timeout.LineNum Timeout.Statement
9468cbc1be6866fc13eae8de692f278c
  data Statement
    = Halt
    | Label GHC.Base.String
    | Goto GHC.Base.String
    | If Timeout.Expr Timeout.Statement
    | Set GHC.Base.String Timeout.Expr
    | In GHC.Base.String
    | Out Timeout.Expr
    | Send GHC.Base.String Timeout.Expr Timeout.Expr Timeout.Expr
    | Seq [Timeout.Statement]
    | NOP
81fa9d294e9b31344c90dd03af96cea5
  type Value = GHC.Types.Int
8e92f1d69b79b7e8e999f99c864ed2e4
  code :: Timeout.PState -> Timeout.Program
  RecSel Left Timeout.PState
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Timeout.PState) ->
                 case ds of wild {
                   Timeout.Birth -> Timeout.code1
                   Timeout.PState ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
f180d4b29b28ae59618e3ec73b350d62
  code1 :: Timeout.Program
  {- Strictness: x -}
a09e186cc5b3d08ca0b4751b34a9b1da
  findOccurance ::
    Timeout.Statement
    -> Timeout.Expr
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Control.Monad.Trans.State.Lazy.State
         Timeout.PState (GHC.Types.Int, GHC.Types.Int, Timeout.PState)
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U)><L,U(U)><S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                Timeout.findOccurance1
                  `cast`
                (<Timeout.Statement>_R
                 ->_R <Timeout.Expr>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Timeout.PState>_N
                               <Data.Functor.Identity.Identity>_R
                               <(GHC.Types.Int, GHC.Types.Int, Timeout.PState)>_N)) -}
28d2b52fda31489ead1c17a0c6a69aa2
  findOccurance1 ::
    Timeout.Statement
    -> Timeout.Expr
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Timeout.PState
    -> Data.Functor.Identity.Identity
         ((GHC.Types.Int, GHC.Types.Int, Timeout.PState), Timeout.PState)
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U)><L,U(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Timeout.Statement)
                   (w1 :: Timeout.Expr)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Types.Int)
                   (w4 :: Timeout.PState) ->
                 case Timeout.$wfindOccurance w w1 w2 w3 w4 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <((GHC.Types.Int, GHC.Types.Int, Timeout.PState),
                             Timeout.PState)>_R)) }) -}
9e87ae39c832e286509fbf0ab4bb82b3
  initState :: [Timeout.Statement] -> Timeout.PState
  {- Arity: 1, Strictness: <L,1*U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Timeout.Statement]) ->
                 Timeout.PState
                   (Data.Map.Base.Tip @ Timeout.Name @ Timeout.Value)
                   (Data.Map.Base.Tip @ Timeout.Name @ Timeout.LineNum)
                   Timeout.$fShowPState2
                   (Timeout.$sfromList
                      @ Timeout.Statement
                      (GHC.Base.build
                         @ (GHC.Types.Int, Timeout.Statement)
                         (\ @ b1
                            (c :: (GHC.Types.Int, Timeout.Statement) -> b1 -> b1)[OneShot]
                            (n :: b1)[OneShot] ->
                          GHC.List.foldr2
                            @ GHC.Types.Int
                            @ Timeout.Statement
                            @ b1
                            (GHC.List.zipFB @ GHC.Types.Int @ Timeout.Statement @ b1 @ b1 c)
                            n
                            Timeout.initState1
                            x)))
                   Timeout.Birth) -}
f5e2ed17ef597ce31bafd676162a450a
  initState1 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
b1b4714f787ccf24bb2a0d9b716f9f6b
  initialState :: Timeout.Program -> Timeout.PState
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Timeout.Program) ->
                 Timeout.PState
                   (Data.Map.Base.Tip @ Timeout.Name @ Timeout.Value)
                   (Data.Map.Base.Tip @ Timeout.Name @ Timeout.LineNum)
                   Timeout.$fShowPState2
                   p
                   Timeout.Birth) -}
67ee2f1968738f383bda3612ecc9b229
  interp :: Control.Monad.Trans.State.Lazy.State Timeout.PState ()
  {- Arity: 1, Strictness: <S,U>m,
     Unfolding: InlineRule (0, True, True)
                Timeout.interp1
                  `cast`
                (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                          <Timeout.PState>_N <Data.Functor.Identity.Identity>_R <()>_N)) -}
64eaeac5aeec5c32fde0ae5821965605
  interp1 ::
    Timeout.PState
    -> Data.Functor.Identity.Identity ((), Timeout.PState)
  {- Arity: 1, Strictness: <S,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Timeout.PState) ->
                 case Timeout.$winterp w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <((), Timeout.PState)>_R)) }) -}
3038c52932170486234173c49b06da22
  labels ::
    Timeout.PState -> Data.Map.Base.Map Timeout.Name Timeout.LineNum
  RecSel Left Timeout.PState
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Timeout.PState) ->
                 case ds of wild {
                   Timeout.Birth -> Timeout.labels1
                   Timeout.PState ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
d0d8e32964922cb8040cfca9af76f2f7
  labels1 :: Data.Map.Base.Map Timeout.Name Timeout.LineNum
  {- Strictness: x -}
c3ef84b15da5f32f3856936d6b2676e4
  past :: Timeout.PState -> Timeout.PState
  RecSel Left Timeout.PState
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Timeout.PState) ->
                 case ds of wild {
                   Timeout.Birth -> Timeout.past1
                   Timeout.PState ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
a2260c4f5786763a4f87d1fe1168dfdf
  past1 :: Timeout.PState
  {- Strictness: x -}
8e5c0093c81c7202ed1c93c6f69d1711
  pos :: Timeout.PState -> Timeout.LineNum
  RecSel Left Timeout.PState
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Timeout.PState) ->
                 case ds of wild {
                   Timeout.Birth -> Timeout.pos1
                   Timeout.PState ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
48091ec816e5b73db42af85f51678747
  pos1 :: Timeout.LineNum
  {- Strictness: x -}
d92e53702dc01fdc45468276f70a0532
  run :: Timeout.PState -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Timeout.run1
                  `cast`
                (<Timeout.PState>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
63fbb91e4454b40aa40c1b3bbd67c928
  run1 ::
    Timeout.PState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (p :: Timeout.PState)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Timeout.interp1 p)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <((), Timeout.PState)>_R) of wild { (,) ds1 y ->
                 case y of vx { DEFAULT -> (# eta, GHC.Tuple.() #) } }) -}
a084b5785a072ae824b0efb07fc6bfc7
  runExpr ::
    Timeout.Expr
    -> Control.Monad.Trans.State.Lazy.State
         Timeout.PState GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Timeout.runExpr1
                  `cast`
                (<Timeout.Expr>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Timeout.PState>_N
                               <Data.Functor.Identity.Identity>_R
                               <GHC.Types.Int>_N)) -}
4864be3fa103a06555b475dcf8433c5c
  runExpr1 ::
    Timeout.Expr
    -> Timeout.PState
    -> Data.Functor.Identity.Identity (GHC.Types.Int, Timeout.PState)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Timeout.Expr) (w1 :: Timeout.PState) ->
                 case Timeout.$wrunExpr w w1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(GHC.Types.Int, Timeout.PState)>_R)) }) -}
924249e6e949a631f90b0b4e5f22c0bd
  runStatement ::
    Timeout.Statement
    -> Control.Monad.Trans.State.Lazy.StateT
         Timeout.PState Data.Functor.Identity.Identity ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Timeout.runStatement1
                  `cast`
                (<Timeout.Statement>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Timeout.PState>_N <Data.Functor.Identity.Identity>_R <()>_N)) -}
533fd55e87e60de45a3c93ad6763f2f4
  runStatement1 ::
    Timeout.Statement
    -> Timeout.PState
    -> Data.Functor.Identity.Identity ((), Timeout.PState)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
1ae05ff9422fa7f50a690424e18e2a4b
  testProg :: Timeout.PState
  {- Strictness: m2,
     Unfolding: (Timeout.PState
                   (Data.Map.Base.Tip @ Timeout.Name @ Timeout.Value)
                   (Data.Map.Base.Tip @ Timeout.Name @ Timeout.LineNum)
                   Timeout.$fShowPState2
                   Timeout.testProg1
                   Timeout.Birth) -}
a7a5dc456397ad26cd475ff82561fbbd
  testProg1 :: Data.Map.Base.Map Timeout.LineNum Timeout.Statement
  {- Unfolding: (Timeout.$sfromList
                   @ Timeout.Statement
                   Timeout.testProg2) -}
e2939c426fa44bea2eb6a4e9a0dbc37f
  testProg10 :: Timeout.Statement
  {- Unfolding: (Timeout.Send
                   Timeout.testProg9
                   Timeout.testProg12
                   Timeout.testProg12
                   Timeout.testProg11) -}
c88d68cb2508bc805580211268d44560
  testProg11 :: Timeout.Expr
  {- Unfolding: (Timeout.Eq Timeout.testProg8 Timeout.testProg12) -}
d8ed54c8e44a13c254303c7f1e6b8f7f
  testProg12 :: Timeout.Expr
  {- HasNoCafRefs, Unfolding: (Timeout.Num Timeout.$fShowPState2) -}
f99a5c9119ccf8055d5ffb360d999f07
  testProg13 :: Timeout.Statement
  {- Unfolding: (Timeout.Set Timeout.testProg9 Timeout.testProg14) -}
6bf8912b307a26277780a22bb22ccc63
  testProg14 :: Timeout.Expr
  {- Unfolding: (Timeout.Add Timeout.testProg8 Timeout.testProg15) -}
ad0d948a162f564944ec15009e3f93b0
  testProg15 :: Timeout.Expr
  {- HasNoCafRefs, Unfolding: (Timeout.Num Timeout.testProg16) -}
f34ff5c816cd3c5cce7e6af0b9c75728
  testProg16 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
66600b13f7538e122b707e256d4da988
  testProg17 :: Timeout.Statement
  {- Unfolding: (Timeout.Set Timeout.testProg9 Timeout.testProg18) -}
2469fbba39965361910396cb58e4bcc8
  testProg18 :: Timeout.Expr
  {- HasNoCafRefs, Unfolding: (Timeout.Num Timeout.testProg19) -}
24e2eb60299804055aee7b3f95b82fed
  testProg19 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
18096796ae2d02e1418120ac6aa885a7
  testProg2 :: [(GHC.Types.Int, Timeout.Statement)]
  {- Unfolding: (GHC.List.zip
                   @ GHC.Types.Int
                   @ Timeout.Statement
                   Timeout.initState1
                   Timeout.testProg3) -}
2b49b7881f813de80796017de244f98f
  testProg3 :: [Timeout.Statement]
  {- Unfolding: (GHC.Types.:
                   @ Timeout.Statement
                   Timeout.testProg17
                   Timeout.testProg4) -}
816fee30021e4e7f1cdc7a0c391e5ce6
  testProg4 :: [Timeout.Statement]
  {- Unfolding: (GHC.Types.:
                   @ Timeout.Statement
                   Timeout.testProg13
                   Timeout.testProg5) -}
a75cd9fe30b0f13a9f01fe2aad999b7b
  testProg5 :: [Timeout.Statement]
  {- Unfolding: (GHC.Types.:
                   @ Timeout.Statement
                   Timeout.testProg10
                   Timeout.testProg6) -}
d73b5e72726f9b27fd278ba358b12904
  testProg6 :: [Timeout.Statement]
  {- Unfolding: (GHC.Types.:
                   @ Timeout.Statement
                   Timeout.testProg7
                   (GHC.Types.[] @ Timeout.Statement)) -}
4b90221ec0d5a2235ffa35d1e0c267a6
  testProg7 :: Timeout.Statement
  {- Unfolding: (Timeout.Out Timeout.testProg8) -}
b72b4681e4d91eb0b1386d8f75387984
  testProg8 :: Timeout.Expr
  {- Unfolding: (Timeout.Var Timeout.testProg9) -}
b4a40ba9ece2bd2fa00e110eba3775c2
  testProg9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "a"#) -}
3af38db33e3607e45dc5c6c130cb8bb4
  untangle :: Timeout.PState -> Timeout.PState
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: Timeout.PState) ->
                 case (Timeout.interp1 p)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <((), Timeout.PState)>_R) of wild { (,) ds1 y ->
                 y }) -}
64fed9437eaf108750d6a2cdf146e497
  vars ::
    Timeout.PState -> Data.Map.Base.Map Timeout.Name Timeout.Value
  RecSel Left Timeout.PState
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Timeout.PState) ->
                 case ds of wild {
                   Timeout.Birth -> Timeout.vars1
                   Timeout.PState ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
0107cff1cd3c6c71b4e2d7329bf6fd20
  vars1 :: Data.Map.Base.Map Timeout.Name Timeout.Value
  {- Strictness: x -}
instance GHC.Classes.Eq [Timeout.Expr] = Timeout.$fEqExpr
instance GHC.Classes.Eq [Timeout.Statement] = Timeout.$fEqStatement
instance GHC.Show.Show [Timeout.Expr] = Timeout.$fShowExpr
instance GHC.Show.Show [Timeout.PState] = Timeout.$fShowPState
instance GHC.Show.Show [Timeout.Statement]
  = Timeout.$fShowStatement
"SPEC/Timeout fromList @ LineNum _" [ALWAYS] forall @ a
                                                    ($dOrd :: GHC.Classes.Ord Timeout.LineNum)
  Data.Map.Base.fromList @ GHC.Types.Int @ a $dOrd
  = Timeout.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

